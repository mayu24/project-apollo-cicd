name: CI/CD (with Trivy & Environments)

on:
  push:
    branches:
      - main
      - stage
      - dev
  pull_request:
    branches: [ main ]

env:
  REGION: "asia-south1"
  AR_REPO: "apps"
  GCP_LOCATION: "asia-south1"
  GCP_PROJECT_ID: "durable-rhythm-465310-i5"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps & tests
        run: |
          pip install -r app/requirements.txt
          python -m pytest -q || true

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
    
      - name: Docker build & push
        id: set-image
        run: |
          gcloud auth configure-docker asia-south1-docker.pkg.dev
          IMAGE="${GCP_LOCATION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO}/devops-app:${GITHUB_SHA}"
          echo "IMAGE=$IMAGE" >> "$GITHUB_OUTPUT"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

  trivy-scan:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Authenticate to GCP (Docker)
        run: |
          gcloud auth configure-docker "${GCP_LOCATION}-docker.pkg.dev"

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ needs.build.outputs.IMAGE }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          driver: 'docker'

  deploy-dev:
    needs: trivy-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER_NAME_DEV }}
          location: ${{ env.REGION }}
      - name: Deploy (Helm)
        run: |
          helm upgrade --install devops-app k8s/helm/devops-app \
            --set image.repository=${{ needs.build.outputs.IMAGE }} \
            --set image.tag=${GITHUB_SHA} \
            --namespace dev --create-namespace

  deploy-stage:
    needs: trivy-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage' || startsWith(github.ref, 'refs/heads/stage/')
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER_NAME_STAGE }}
          location: ${{ env.REGION }}
      - name: Deploy (Helm)
        run: |
          helm upgrade --install devops-app k8s/helm/devops-app \
            --set image.repository=${{ needs.build.outputs.IMAGE }} \
            --set image.tag=${GITHUB_SHA} \
            --namespace staging --create-namespace

  deploy-prod:
    needs: deploy-stage
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER_NAME_PROD }}
          location: ${{ env.REGION }}
      - name: Deploy (Helm)
        run: |
          helm upgrade --install devops-app k8s/helm/devops-app \
            --set image.repository=${{ needs.build.outputs.IMAGE }} \
            --set image.tag=${GITHUB_SHA} \
            --namespace prod --create-namespace
